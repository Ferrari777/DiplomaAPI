// <auto-generated />
using System;
using DiplomaAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DiplomaAPI.Migrations
{
    [DbContext(typeof(UserDbContext))]
    [Migration("20230420003343_CreateNewRelatedTables")]
    partial class CreateNewRelatedTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DiplomaAPI.Models.Agreed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AgreedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AgreedNumber")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("AgreedSinceDate")
                        .IsRequired()
                        .HasColumnType("Date");

                    b.Property<DateTime>("CreatedDatetime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DocFileId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDatetime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DocFileId")
                        .IsUnique();

                    b.ToTable("Agreed");
                });

            modelBuilder.Entity("DiplomaAPI.Models.Approved", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApprovedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ApprovedNumber")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("ApprovedOrder")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("ApprovedSince")
                        .HasColumnType("Date");

                    b.Property<DateTime>("CreatedDatetime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DocFileId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDatetime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DocFileId")
                        .IsUnique();

                    b.ToTable("Approved");
                });

            modelBuilder.Entity("DiplomaAPI.Models.DocFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("DocFiles");
                });

            modelBuilder.Entity("DiplomaAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDatetime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserRoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserRoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DiplomaAPI.Models.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("DiplomaAPI.Models.Agreed", b =>
                {
                    b.HasOne("DiplomaAPI.Models.DocFile", "DocFile")
                        .WithOne("Agreed")
                        .HasForeignKey("DiplomaAPI.Models.Agreed", "DocFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocFile");
                });

            modelBuilder.Entity("DiplomaAPI.Models.Approved", b =>
                {
                    b.HasOne("DiplomaAPI.Models.DocFile", "DocFile")
                        .WithOne("Approved")
                        .HasForeignKey("DiplomaAPI.Models.Approved", "DocFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocFile");
                });

            modelBuilder.Entity("DiplomaAPI.Models.DocFile", b =>
                {
                    b.HasOne("DiplomaAPI.Models.User", "User")
                        .WithMany("DocFiles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DiplomaAPI.Models.User", b =>
                {
                    b.HasOne("DiplomaAPI.Models.UserRole", "UserRole")
                        .WithMany("Users")
                        .HasForeignKey("UserRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("DiplomaAPI.Models.DocFile", b =>
                {
                    b.Navigation("Agreed");

                    b.Navigation("Approved");
                });

            modelBuilder.Entity("DiplomaAPI.Models.User", b =>
                {
                    b.Navigation("DocFiles");
                });

            modelBuilder.Entity("DiplomaAPI.Models.UserRole", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
